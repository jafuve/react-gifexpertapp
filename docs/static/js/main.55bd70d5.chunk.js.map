{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EAEXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAmBrC,OAZAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDhByBK,CAAa1B,GAAhCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,oCACA,wBAAIJ,UAAU,qCAAd,IAAoDhB,EAApD,KACCoB,GAAW,uBAAGJ,UAAU,oCAAb,WAER,yBAAKA,UAAU,aAIPH,EAAOJ,KAAM,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEhBfkB,EAAe,WAAO,IAAD,EAEM1C,mBAAU,CAAC,WAFjB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAU9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAO3B,EACPA,SAAUA,U,MCjBtC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.55bd70d5.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    };\n\n    const handleSubmit = (e) => {   \n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            setCategories( cats => [ inputValue, ...cats] );\n            setInputValue('');\n        }\n\n        \n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=AUlK7gLw8IylCNeHh32N5f0nAWzXzyJf&limit=10`;\n\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    });\n    \n    return gifs;\n    // setImages(gifs);\n}","import React from 'react'\n\nexport const GifGridItem = ( {title, url} ) => {\n    // console.log(title, url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"cardGrid \">\n            \n            \n                {\n                    images.map(  img => (\n                        <GifGridItem \n                        key={img.id} \n                        {...img}\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport {getGifs} from'../helpers/getGifs';\n\nexport const useFetchGifs = (category) =>{\n    \n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs(category)\n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n            });\n\n    }, [category] );\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState( ['Naruto'] );\n\n    // const handleAdd = () => {\n    //     // setCategories( [...categories, 'Naruto'] );\n\n    //     setCategories( cats => [...cats, 'Boruto'] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>    \n            <AddCategory setCategories={setCategories} />   \n            <hr/>\n            \n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key = {category} \n                            category={category} \n                        />\n                     ) )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}